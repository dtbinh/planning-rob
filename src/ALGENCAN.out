
 ==============================================================================
 This is ALGENCAN 2.4.0.
 ALGENCAN, an augmented Lagrangian method for nonlinear programming, is part of
 the TANGO Project: Trustable Algorithms for Nonlinear General Optimization.
 See http://www.ime.usp.br/~egbirgin/tango/ for details.
 ==============================================================================

 The optional specification file algencan.dat was not found in the current
 directory (this is not a problem nor an error). The default values for the
 ALGENCAN parameters will be used.

 ALGENCAN PARAMETERS:
 firstde  =                    T
 seconde  =                    F
 truehpr  =                    F
 hptype   =               HAPPRO
 innslvr  =                   TN
 sclsys   =                    F
 skipacc  =                    T
 lsssub   =                 NONE
 sclsub   =                 NONE
 rmfixv   =                    T
 slacks   =                    F
 scale    =                    T
 epsfeas  =           5.0000D-01
 epsopt   =           9.0000D-01
 efacc    =           1.0000D-04
 eoacc    =           1.0000D-04
 iprint   =                   10
 ncomp    =                    6

 Number of variables               :      18
 Number of equality constraints    :       5
 Number of inequality constraints  :     100
 Number of bound constraints       :      36

 Number of removed fixed variables :       0

 Objective function scale factor   : 2.6D-01
 Smallest constraints scale factor : 1.9D-02

 Entry to ALGENCAN.
 Number of variables  :      18
 Number of constraints:     105

out penalt  objective infeas  scaled    scaled infeas norm   |Grad| inner Newton
ite         function  ibilty  obj-funct infeas +compl graLag infeas totit forKKT
  0         1.970D-01 7.D-01  5.219D-02 8.D-02 8.D-02 1.D+00 3.D-01    0   0   0
  1 1.D+01  1.115D-01 2.D-01  2.954D-02 4.D-02 4.D-02 6.D-01 5.D-02    4C  0   0

 Flag of ALGENCAN: Solution was found.

FINAL POINT:

  INDEX                X(INDEX)
      1  1.8677732305874375D+00
      2  4.4382365177592238D+00
      3  1.8800954475536382D+00
      4  4.4905657823319434D+00
      5  1.9085460222901074D+00
      6  4.6116080061759250D+00
      7  1.9423412420924411D+00
      8  4.7550789308789003D+00
      9  1.9722452798993610D+00
     10  4.8820980580617679D+00
     11  2.0016660043770673D+00
     12  5.0075614304403624D+00
     13  2.0337491868658386D+00
     14  5.1500936617341910D+00
     15  2.0692365070071252D+00
     16  5.2504097821613813D+00
     17  2.0685987632281426D+00
     18  5.3266675121559528D+00

FINAL ESTIMATION OF THE LAGRANGE MULTIPLIERS: 

  INDEX           LAMBDA(INDEX)
      1  3.8116909477878724D-01
      2  1.6167633357765843D+00
      3 -1.9076775762694531D-04
      4  4.5102237066741407D-02
      5  1.1541099895681152D-05
      6  0.0000000000000000D+00
      7  0.0000000000000000D+00
      8  0.0000000000000000D+00
      9  0.0000000000000000D+00
     10  0.0000000000000000D+00
     11  0.0000000000000000D+00
     12  0.0000000000000000D+00
     13  0.0000000000000000D+00
     14  0.0000000000000000D+00
     15  0.0000000000000000D+00
     16  0.0000000000000000D+00
     17  0.0000000000000000D+00
     18  0.0000000000000000D+00
     19  0.0000000000000000D+00
     20  0.0000000000000000D+00
     21  0.0000000000000000D+00
     22  0.0000000000000000D+00
     23  0.0000000000000000D+00
     24  0.0000000000000000D+00
     25  0.0000000000000000D+00
     26  0.0000000000000000D+00
     27  0.0000000000000000D+00
     28  0.0000000000000000D+00
     29  0.0000000000000000D+00
     30  0.0000000000000000D+00
     31  0.0000000000000000D+00
     32  0.0000000000000000D+00
     33  0.0000000000000000D+00
     34  0.0000000000000000D+00
     35  0.0000000000000000D+00
     36  0.0000000000000000D+00
     37  0.0000000000000000D+00
     38  0.0000000000000000D+00
     39  0.0000000000000000D+00
     40  0.0000000000000000D+00
     41  0.0000000000000000D+00
     42  0.0000000000000000D+00
     43  0.0000000000000000D+00
     44  0.0000000000000000D+00
     45  0.0000000000000000D+00
     46  0.0000000000000000D+00
     47  0.0000000000000000D+00
     48  0.0000000000000000D+00
     49  0.0000000000000000D+00
     50  0.0000000000000000D+00
     51  0.0000000000000000D+00
     52  0.0000000000000000D+00
     53  0.0000000000000000D+00
     54  0.0000000000000000D+00
     55  0.0000000000000000D+00
     56  0.0000000000000000D+00
     57  0.0000000000000000D+00
     58  2.0659439206548998D-02
     59  0.0000000000000000D+00
     60  1.7394680668442450D-01
     61  0.0000000000000000D+00
     62  1.5195890505502091D-01
     63  0.0000000000000000D+00
     64  6.7924924026344325D-03
     65  0.0000000000000000D+00
     66  0.0000000000000000D+00
     67  0.0000000000000000D+00
     68  0.0000000000000000D+00
     69  0.0000000000000000D+00
     70  0.0000000000000000D+00
     71  0.0000000000000000D+00
     72  0.0000000000000000D+00
     73  0.0000000000000000D+00
     74  0.0000000000000000D+00
     75  0.0000000000000000D+00
     76  0.0000000000000000D+00
     77  0.0000000000000000D+00
     78  0.0000000000000000D+00
     79  0.0000000000000000D+00
     80  0.0000000000000000D+00
     81  0.0000000000000000D+00
     82  0.0000000000000000D+00
     83  0.0000000000000000D+00
     84  0.0000000000000000D+00
     85  0.0000000000000000D+00
     86  0.0000000000000000D+00
     87  0.0000000000000000D+00
     88  0.0000000000000000D+00
     89  0.0000000000000000D+00
     90  0.0000000000000000D+00
     91  0.0000000000000000D+00
     92  0.0000000000000000D+00
     93  0.0000000000000000D+00
     94  0.0000000000000000D+00
     95  0.0000000000000000D+00
     96  0.0000000000000000D+00
     97  0.0000000000000000D+00
     98  0.0000000000000000D+00
     99  0.0000000000000000D+00
    100  1.2770062876630250D-01
    101  0.0000000000000000D+00
    102  1.3426677820477034D-01
    103  0.0000000000000000D+00
    104  9.1643235191623498D-02
    105  0.0000000000000000D+00

 Total CPU time in seconds:     8.81

 User-provided subroutines calls counters: 

 Subroutine evalf     (coded=F):      0
 Subroutine evalg     (coded=F):      0
 Subroutine evalh     (coded=F):      0
 Subroutine evalc     (coded=F):      0 (     0 calls per constraint in average)
 Subroutine evaljac   (coded=F):      0 (     0 calls per constraint in average)
 Subroutine evalhc    (coded=F):      0 (     0 calls per constraint in average)
 Subroutine evalfc    (coded=T):     12
 Subroutine evalgjac  (coded=T):     10
 Subroutine evalgjacp (coded=F):      0
 Subroutine evalhl    (coded=F):      0
 Subroutine evalhlp   (coded=T):      0

