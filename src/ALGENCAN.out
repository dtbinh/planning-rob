
 ==============================================================================
 This is ALGENCAN 2.4.0.
 ALGENCAN, an augmented Lagrangian method for nonlinear programming, is part of
 the TANGO Project: Trustable Algorithms for Nonlinear General Optimization.
 See http://www.ime.usp.br/~egbirgin/tango/ for details.
 ==============================================================================

 The optional specification file algencan.dat was not found in the current
 directory (this is not a problem nor an error). The default values for the
 ALGENCAN parameters will be used.

 ALGENCAN PARAMETERS:
 firstde  =                    T
 seconde  =                    F
 truehpr  =                    F
 hptype   =               HAPPRO
 innslvr  =                   TN
 sclsys   =                    F
 skipacc  =                    T
 lsssub   =                 NONE
 sclsub   =                 NONE
 rmfixv   =                    T
 slacks   =                    F
 scale    =                    T
 epsfeas  =           1.0000D-01
 epsopt   =           9.0000D-01
 efacc    =           1.0000D-04
 eoacc    =           1.0000D-04
 iprint   =                   10
 ncomp    =                    6

 Number of variables               :      18
 Number of equality constraints    :       5
 Number of inequality constraints  :      80
 Number of bound constraints       :      36

 Number of removed fixed variables :       0

 Objective function scale factor   : 3.4D-01
 Smallest constraints scale factor : 2.9D-02

 Entry to ALGENCAN.
 Number of variables  :      18
 Number of constraints:      85

out penalt  objective infeas  scaled    scaled infeas norm   |Grad| inner Newton
ite         function  ibilty  obj-funct infeas +compl graLag infeas totit forKKT
  0         2.366D-01 7.D-01  7.968D-02 1.D-01 1.D-01 1.D+00 3.D-01    0   0   0
  1 1.D+01  1.402D-01 1.D-01  4.722D-02 5.D-02 5.D-02 7.D-01 4.D-02    3C  0   0
  2 1.D+01  1.171D-01 6.D-02  3.942D-02 9.D-03 9.D-03 9.D-01 6.D-03    5C  0   0

 Flag of ALGENCAN: Solution was found.

FINAL POINT:

  INDEX                X(INDEX)
      1  1.8257230826495268D+00
      2  4.2119931432382769D+00
      3  1.8420233449355312D+00
      4  4.2821116906279411D+00
      5  1.8749379300504427D+00
      6  4.4169517736336505D+00
      7  1.9132731598580668D+00
      8  4.6253550738130897D+00
      9  1.9575120971776490D+00
     10  4.8122909398858011D+00
     11  1.9917680218166780D+00
     12  4.9636483925038331D+00
     13  2.0247166781513406D+00
     14  5.1195291126504676D+00
     15  2.0688659145816106D+00
     16  5.2620680444873296D+00
     17  2.0635404833418560D+00
     18  5.3256880592376659D+00

FINAL ESTIMATION OF THE LAGRANGE MULTIPLIERS: 

  INDEX           LAMBDA(INDEX)
      1  5.4089578065781863D-01
      2  1.8315067866683332D+00
      3 -5.0894984115325212D-03
      4  4.1789373276699279D-02
      5 -1.5611390936229440D-03
      6  0.0000000000000000D+00
      7  0.0000000000000000D+00
      8  0.0000000000000000D+00
      9  0.0000000000000000D+00
     10  0.0000000000000000D+00
     11  0.0000000000000000D+00
     12  0.0000000000000000D+00
     13  0.0000000000000000D+00
     14  0.0000000000000000D+00
     15  0.0000000000000000D+00
     16  0.0000000000000000D+00
     17  0.0000000000000000D+00
     18  0.0000000000000000D+00
     19  0.0000000000000000D+00
     20  0.0000000000000000D+00
     21  0.0000000000000000D+00
     22  0.0000000000000000D+00
     23  0.0000000000000000D+00
     24  0.0000000000000000D+00
     25  0.0000000000000000D+00
     26  0.0000000000000000D+00
     27  0.0000000000000000D+00
     28  0.0000000000000000D+00
     29  0.0000000000000000D+00
     30  0.0000000000000000D+00
     31  0.0000000000000000D+00
     32  0.0000000000000000D+00
     33  0.0000000000000000D+00
     34  0.0000000000000000D+00
     35  0.0000000000000000D+00
     36  0.0000000000000000D+00
     37  0.0000000000000000D+00
     38  0.0000000000000000D+00
     39  0.0000000000000000D+00
     40  0.0000000000000000D+00
     41  0.0000000000000000D+00
     42  0.0000000000000000D+00
     43  0.0000000000000000D+00
     44  0.0000000000000000D+00
     45  0.0000000000000000D+00
     46  1.1030769084553010D-02
     47  0.0000000000000000D+00
     48  9.9240312770283751D-02
     49  0.0000000000000000D+00
     50  3.7805140219983285D-01
     51  0.0000000000000000D+00
     52  1.6567207370869755D-01
     53  0.0000000000000000D+00
     54  5.4017666104296903D-02
     55  0.0000000000000000D+00
     56  0.0000000000000000D+00
     57  0.0000000000000000D+00
     58  0.0000000000000000D+00
     59  0.0000000000000000D+00
     60  0.0000000000000000D+00
     61  0.0000000000000000D+00
     62  0.0000000000000000D+00
     63  0.0000000000000000D+00
     64  0.0000000000000000D+00
     65  0.0000000000000000D+00
     66  0.0000000000000000D+00
     67  0.0000000000000000D+00
     68  0.0000000000000000D+00
     69  0.0000000000000000D+00
     70  0.0000000000000000D+00
     71  0.0000000000000000D+00
     72  0.0000000000000000D+00
     73  0.0000000000000000D+00
     74  0.0000000000000000D+00
     75  0.0000000000000000D+00
     76  0.0000000000000000D+00
     77  0.0000000000000000D+00
     78  0.0000000000000000D+00
     79  0.0000000000000000D+00
     80  4.8444474786776562D-02
     81  0.0000000000000000D+00
     82  1.2278684602103704D-01
     83  0.0000000000000000D+00
     84  5.2322265349778053D-02
     85  0.0000000000000000D+00

 Total CPU time in seconds:     8.01

 User-provided subroutines calls counters: 

 Subroutine evalf     (coded=F):      0
 Subroutine evalg     (coded=F):      0
 Subroutine evalh     (coded=F):      0
 Subroutine evalc     (coded=F):      0 (     0 calls per constraint in average)
 Subroutine evaljac   (coded=F):      0 (     0 calls per constraint in average)
 Subroutine evalhc    (coded=F):      0 (     0 calls per constraint in average)
 Subroutine evalfc    (coded=T):     22
 Subroutine evalgjac  (coded=T):     14
 Subroutine evalgjacp (coded=F):      0
 Subroutine evalhl    (coded=F):      0
 Subroutine evalhlp   (coded=T):      0

